const axios = require('axios');

const BASE_URL = 'https://etf-flow.vadimsemenko.ru';

async function testOriginalUser() {
	console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å—Å—ã–ª–∫–∏\n');

	const originalDeviceId = 'ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765';
	const appName = 'etf.flow';

	try {
		// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º deviceId
		console.log('1Ô∏è‚É£ –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ deviceId:', originalDeviceId);

		try {
			const checkUserResponse = await axios.get(`${BASE_URL}/admin/users/by-device-id/${originalDeviceId}`);

			if (checkUserResponse.data.success) {
				console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:');
				console.log('   ID:', checkUserResponse.data.user.id);
				console.log('   Device ID:', checkUserResponse.data.user.deviceId);
				console.log('   Application:', checkUserResponse.data.user.application.name);
				console.log('   Telegram Chat ID:', checkUserResponse.data.user.telegramChatId || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω');
				console.log('   Settings:', JSON.stringify(checkUserResponse.data.user.settings, null, 2));
			} else {
				console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ');
			}
		} catch (error) {
			console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.response?.data || error.message);
		}

		// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è etf.flow
		console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è etf.flow...');
		try {
			const allUsersResponse = await axios.get(`${BASE_URL}/admin/applications/etf.flow`);

			if (allUsersResponse.data.success) {
				const users = allUsersResponse.data.application.users || [];
				console.log(`–ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π etf.flow:`);

				users.forEach((user, index) => {
					console.log(`   ${index + 1}. Device ID: ${user.deviceId || 'null'}`);
					console.log(`      Telegram: ${user.telegramChatId || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}`);
					console.log(`      Created: ${user.createdAt}`);
					console.log(`      Settings: ${JSON.stringify(user.settings, null, 2)}`);
					console.log('');
				});
			} else {
				console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
			}
		} catch (error) {
			console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.response?.data || error.message);
		}

		// 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram
		console.log('3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram...');
		const telegramUrl = `https://t.me/etf_flows_bot?start=${appName}:${originalDeviceId}`;
		console.log('üîó Telegram —Å—Å—ã–ª–∫–∞:', telegramUrl);
		console.log('');

		// 4. –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ
		console.log('4Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ...');
		const startParam = `${appName}:${originalDeviceId}`;
		console.log('üì± –ü–∞—Ä–∞–º–µ—Ç—Ä start:', startParam);

		// –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä (–∫–∞–∫ –≤ –±–æ—Ç–µ)
		let parsedAppName = 'etf.flow'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
		let parsedDeviceId = '';

		if (startParam.includes(':')) {
			const parts = startParam.split(':');
			parsedAppName = parts[0];
			parsedDeviceId = parts[1];
		} else {
			parsedDeviceId = startParam;
		}

		console.log('üîç –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:');
		console.log('   App Name:', parsedAppName);
		console.log('   Device ID:', parsedDeviceId);
		console.log('');

		console.log('üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
		console.log('   –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ');
		console.log('   –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–∞—Ä—Å–∏—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ');
		console.log('');
		console.log('üì± –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ë–î, —Ç–æ –Ω—É–∂–Ω–æ –µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å!');

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
	}
}

testOriginalUser();
