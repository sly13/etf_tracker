const axios = require('axios');

const BASE_URL = 'https://etf-flow.vadimsemenko.ru';

async function testDeviceRegistrationWithoutFCM() {
	console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –±–µ–∑ FCM —Ç–æ–∫–µ–Ω–∞\n');

	try {
		// 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Device ID
		const deviceId = `ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_${Date.now()}`;
		const appName = 'etf.flow';
		const userId = `user_${Date.now()}`;

		console.log('1Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:');
		console.log('   Device ID:', deviceId);
		console.log('   App Name:', appName);
		console.log('   User ID:', userId);
		console.log('');

		// 2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ë–ï–ó FCM —Ç–æ–∫–µ–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω)
		console.log('2Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å —Ç–µ—Å—Ç–æ–≤—ã–º FCM —Ç–æ–∫–µ–Ω–æ–º...');
		const registerResponse = await axios.post(`${BASE_URL}/notifications/register-device`, {
			token: 'test_telegram_only_token', // –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è Telegram
			appName: appName,
			userId: userId,
			deviceId: deviceId,
			deviceType: 'ios',
			appVersion: '1.0.0',
			firstName: '–¢–µ—Å—Ç',
			lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
			email: 'test@example.com',
		});

		console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', registerResponse.data);
		console.log('');

		// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª—Å—è –≤ –ë–î
		console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
		const checkUserResponse = await axios.get(`${BASE_URL}/admin/users/by-device-id/${deviceId}`);

		if (checkUserResponse.data.success) {
			console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:');
			console.log('   ID:', checkUserResponse.data.user.id);
			console.log('   Device ID:', checkUserResponse.data.user.deviceId);
			console.log('   Application:', checkUserResponse.data.user.application.name);
			console.log('   Telegram Chat ID:', checkUserResponse.data.user.telegramChatId || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω');
			console.log('   Settings:', JSON.stringify(checkUserResponse.data.user.settings, null, 2));
		} else {
			console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ');
		}

		console.log('\n4Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram...');
		const telegramUrl = `https://t.me/etf_flows_bot?start=${appName}:${deviceId}`;
		console.log('üîó Telegram —Å—Å—ã–ª–∫–∞:', telegramUrl);
		console.log('');

		console.log('üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
		console.log('   –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ');
		console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ –ë–î ‚úÖ');
		console.log('   –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ ‚úÖ');
		console.log('');
		console.log('üì± –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram!');

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
	}
}

testDeviceRegistrationWithoutFCM();
