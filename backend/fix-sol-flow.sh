#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü—ã sol_flow –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º Prisma –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü—ã sol_flow —á–µ—Ä–µ–∑ Prisma..."
echo "=============================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DATABASE_URL
if [ -z "$DATABASE_URL" ]; then
    if [ -f .env ]; then
        echo "üìù –ó–∞–≥—Ä—É–∂–∞–µ–º DATABASE_URL –∏–∑ .env..."
        export $(cat .env | grep -v '^#' | xargs)
    else
        echo "‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ñ–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env"
        exit 1
    fi
fi

echo "üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${DATABASE_URL%%@*}@***"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã sol_flow
CHECK_TABLE=$(node -e "
  const { PrismaClient } = require('@prisma/client');
  const prisma = new PrismaClient();
  (async () => {
    try {
      await prisma.\$queryRawUnsafe('SELECT 1 FROM \"sol_flow\" LIMIT 1');
      console.log('exists');
    } catch (e) {
      console.log('not_exists');
    } finally {
      await prisma.\$disconnect();
    }
  })();
" 2>/dev/null)

if [ "$CHECK_TABLE" = "exists" ]; then
    echo "‚úÖ –¢–∞–±–ª–∏—Ü–∞ sol_flow —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π..."
    npx prisma migrate status
    exit 0
fi

echo "‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ sol_flow –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π..."
npx prisma migrate status

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–º–µ—á–µ–Ω–∞ –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è –∫–∞–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω–∞—è
MIGRATION_MARKED=$(node -e "
  const { PrismaClient } = require('@prisma/client');
  const prisma = new PrismaClient();
  (async () => {
    try {
      const result = await prisma.\$queryRawUnsafe('SELECT 1 FROM \"_prisma_migrations\" WHERE \"migration_name\" = \\'20251029184712_add_sol_flow\\' LIMIT 1');
      console.log('marked');
    } catch (e) {
      console.log('not_marked');
    } finally {
      await prisma.\$disconnect();
    }
  })();
" 2>/dev/null)

if [ "$MIGRATION_MARKED" = "marked" ]; then
    echo "üìù –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω–∞—è, –Ω–æ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ—Ç"
    echo "üîÑ –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –ø–æ–º–µ—Ç–∫—É –º–∏–≥—Ä–∞—Ü–∏–∏..."
    npx prisma migrate resolve --rolled-back 20251029184712_add_sol_flow
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –ü–æ–º–µ—Ç–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –æ—Ç–∫–∞—á–µ–Ω–∞"
    else
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–∞—Ç–∏—Ç—å –ø–æ–º–µ—Ç–∫—É, –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é"
    fi
fi

echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Prisma migrate deploy..."
npx prisma migrate deploy

if [ $? -eq 0 ]; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
    CHECK_TABLE_AFTER=$(node -e "
      const { PrismaClient } = require('@prisma/client');
      const prisma = new PrismaClient();
      (async () => {
        try {
          await prisma.\$queryRawUnsafe('SELECT 1 FROM \"sol_flow\" LIMIT 1');
          console.log('exists');
        } catch (e) {
          console.log('not_exists');
        } finally {
          await prisma.\$disconnect();
        }
      })();
    " 2>/dev/null)
    
    if [ "$CHECK_TABLE_AFTER" = "exists" ]; then
        echo ""
        echo "‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!"
        echo "–¢–∞–±–ª–∏—Ü–∞ sol_flow —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ Prisma migrate deploy"
        echo ""
        echo "üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:"
        npx prisma migrate status
    else
        echo ""
        echo "‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞, –Ω–æ —Ç–∞–±–ª–∏—Ü–∞ –≤—Å–µ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
        exit 1
    fi
else
    echo ""
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
    exit 1
fi

