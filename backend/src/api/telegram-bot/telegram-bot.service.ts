import { Injectable, Logger, OnModuleInit } from '@nestjs/common';
import { BotService } from './services/bot.service';
import { BotHandler } from './handlers/bot.handler';
import { ETFNotificationData } from './types/bot.types';

@Injectable()
export class TelegramBotService implements OnModuleInit {
  private readonly logger = new Logger(TelegramBotService.name);

  constructor(
    private botService: BotService,
    private botHandler: BotHandler,
  ) {}

  onModuleInit() {
    this.logger.log('üöÄ Initializing Telegram Bot Service...');

    // Temporarily disable bot initialization to avoid conflicts
    // this.botService.initializeBot();

    // if (this.botService.isBotInitialized()) {
    //   this.botHandler.setupHandlers();
    //   this.logger.log('‚úÖ Telegram Bot Service initialized successfully');
    // } else {
    //   this.logger.warn(
    //     '‚ö†Ô∏è Telegram Bot Service initialization skipped - bot not configured',
    //   );
    // }

    this.logger.warn(
      '‚ö†Ô∏è Telegram Bot Service initialization temporarily disabled',
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
   */
  isBotInitialized(): boolean {
    return this.botService.isBotInitialized();
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   */
  async sendTestMessage(chatId: string, message: string): Promise<boolean> {
    return this.botService.sendTestMessage(chatId, message);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
   */
  async sendETFUpdateNotification(data: ETFNotificationData): Promise<boolean> {
    return this.botService.sendETFUpdateNotification(data);
  }
}
