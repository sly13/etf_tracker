const axios = require('axios');

const BASE_URL = 'http://localhost:3066';

async function testDeviceRegistration() {
	console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π\n');

	const deviceId = 'ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765';
	const appName = 'etf.flow';

	try {
		console.log('üì± –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ...');
		console.log('   Device ID (—Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º):', deviceId);
		console.log('   App Name:', appName);
		console.log('');

		const response = await axios.post(`${BASE_URL}/notifications/register-device`, {
			token: 'test_telegram_token',
			appName: appName,
			userId: 'user_test_123',
			deviceId: deviceId,
			deviceType: 'ios',
			appVersion: '1.0.0',
			firstName: '–¢–µ—Å—Ç',
			lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
			email: 'test@example.com',
		});

		console.log('üìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
		console.log('   Success:', response.data.success);
		console.log('   Message:', response.data.message);
		console.log('');

		if (response.data.success) {
			console.log('‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
			console.log('');

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å –≤ –ë–î
			console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î...');
			const dbCheck = await axios.get(`${BASE_URL}/admin/users`);

			if (dbCheck.data.success && dbCheck.data.users.length > 0) {
				const user = dbCheck.data.users[0];
				console.log('üìã –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î:');
				console.log('   ID:', user.id);
				console.log('   Device ID:', user.deviceId || '–ù–ï –°–û–•–†–ê–ù–ï–ù');
				console.log('   OS:', user.os || '–ù–ï –°–û–•–†–ê–ù–ï–ù');
				console.log('   Device Token:', user.deviceToken ? '–°–û–•–†–ê–ù–ï–ù' : '–ù–ï –°–û–•–†–ê–ù–ï–ù');
				console.log('   Application:', user.application?.name || '–ù–ï –°–û–•–†–ê–ù–ï–ù');
				console.log('');

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ deviceId
				const expectedCleanDeviceId = 'B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765';
				const expectedOs = 'ios';

				console.log('üéØ –û–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:');
				console.log('   Clean Device ID:', expectedCleanDeviceId);
				console.log('   OS:', expectedOs);
				console.log('');

				if (user.deviceId === expectedCleanDeviceId) {
					console.log('‚úÖ Device ID –æ—á–∏—â–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
				} else {
					console.log('‚ùå Device ID –ù–ï –æ—á–∏—â–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
					console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', expectedCleanDeviceId);
					console.log('   –ü–æ–ª—É—á–µ–Ω–æ:', user.deviceId);
				}

				if (user.os === expectedOs) {
					console.log('‚úÖ OS —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
				} else {
					console.log('‚ùå OS –ù–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
					console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', expectedOs);
					console.log('   –ü–æ–ª—É—á–µ–Ω–æ:', user.os);
				}
			} else {
				console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î');
			}
		} else {
			console.log('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞');
		}

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
	}
}

testDeviceRegistration();
