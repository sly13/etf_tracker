const axios = require('axios');

const BASE_URL = 'http://localhost:3066';

async function testTelegramBotWithCleanDeviceId() {
	console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram –±–æ—Ç —Å –æ—á–∏—â–µ–Ω–Ω—ã–º deviceId\n');

	const originalDeviceId = 'ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765';
	const cleanDeviceId = 'B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765';
	const appName = 'etf.flow';

	try {
		// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –ë–î —Å –æ—á–∏—â–µ–Ω–Ω—ã–º deviceId
		console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î...');
		console.log(`   –ò—â–µ–º –ø–æ –æ—á–∏—â–µ–Ω–Ω–æ–º—É deviceId: ${cleanDeviceId}`);

		// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)
		const response = await axios.post(`${BASE_URL}/notifications/register-device`, {
			token: 'test_telegram_token_2',
			appName: appName,
			userId: 'user_test_456',
			deviceId: originalDeviceId, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
			deviceType: 'ios',
			appVersion: '1.0.0',
			firstName: 'Telegram',
			lastName: 'Test',
			email: 'telegram@test.com',
		});

		console.log('üìä –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
		console.log('   Success:', response.data.success);
		console.log('   Message:', response.data.message);
		console.log('');

		// 2. –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ
		console.log('2Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ...');
		const startParam = `${appName}:${originalDeviceId}`;
		console.log('üì± –ü–∞—Ä–∞–º–µ—Ç—Ä start:', startParam);

		// –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä (–∫–∞–∫ –≤ –±–æ—Ç–µ)
		let parsedAppName = 'etf.flow'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
		let parsedDeviceId = '';

		if (startParam.includes(':')) {
			const parts = startParam.split(':');
			parsedAppName = parts[0];
			parsedDeviceId = parts[1];
		} else {
			parsedDeviceId = startParam;
		}

		console.log('üîç –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:');
		console.log('   App Name:', parsedAppName);
		console.log('   Device ID (—Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º):', parsedDeviceId);

		// –û—á–∏—â–∞–µ–º deviceId (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)
		let cleanParsedDeviceId = parsedDeviceId;
		if (parsedDeviceId.startsWith('ios_')) {
			cleanParsedDeviceId = parsedDeviceId.substring(4); // –£–±–∏—Ä–∞–µ–º 'ios_'
		} else if (parsedDeviceId.startsWith('android_')) {
			cleanParsedDeviceId = parsedDeviceId.substring(8); // –£–±–∏—Ä–∞–µ–º 'android_'
		}

		console.log('   Device ID (–æ—á–∏—â–µ–Ω–Ω—ã–π):', cleanParsedDeviceId);
		console.log('');

		// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
		console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
		console.log(`   –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å deviceId: ${cleanParsedDeviceId}`);

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ë–î –Ω–∞–ø—Ä—è–º—É—é
		const { exec } = require('child_process');
		const { promisify } = require('util');
		const execAsync = promisify(exec);

		const dbQuery = `psql -d etf_flow_db -c "SELECT \\"deviceId\\", \\"os\\", \\"telegramChatId\\" FROM \\"User\\" WHERE \\"deviceId\\" = '${cleanParsedDeviceId}';"`;
		const { stdout } = await execAsync(dbQuery);

		console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –≤ –ë–î:');
		console.log(stdout);

		if (stdout.includes(cleanParsedDeviceId)) {
			console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î!');
			console.log('‚úÖ Telegram –±–æ—Ç —Å–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
			console.log('‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ Telegram Chat ID –≤–æ–∑–º–æ–∂–Ω–∞');
			console.log('');

			console.log('üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
			console.log('   ‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º deviceId');
			console.log('   ‚úÖ OS —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
			console.log('   ‚úÖ Telegram —Å—Å—ã–ª–∫–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
			console.log('   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–∞—Ä—Å–∏—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
			console.log('   ‚úÖ deviceId –æ—á–∏—â–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
			console.log('   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ë–î');
			console.log('   ‚úÖ Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
			console.log('');
			console.log('üîó –°—Å—ã–ª–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
			console.log(`   https://t.me/etf_flows_bot?start=${startParam}`);
		} else {
			console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
		}

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
	}
}

testTelegramBotWithCleanDeviceId();
