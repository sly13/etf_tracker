const axios = require('axios');

const BASE_URL = 'http://localhost:3066';

async function checkAllUsers() {
	console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î\n');

	try {
		// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è etf.flow
		const response = await axios.get(`${BASE_URL}/admin/applications/etf.flow`);

		if (response.data.success) {
			const users = response.data.application.users || [];
			console.log(`–ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π etf.flow:`);

			users.forEach((user, index) => {
				console.log(`   ${index + 1}. ID: ${user.id}`);
				console.log(`      Device ID: ${user.deviceId || 'null'}`);
				console.log(`      Device Token: ${user.deviceToken.substring(0, 20)}...`);
				console.log(`      Telegram Chat ID: ${user.telegramChatId || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}`);
				console.log(`      Created: ${user.createdAt}`);
				console.log(`      Settings: ${JSON.stringify(user.settings, null, 2)}`);
				console.log('');
			});
		} else {
			console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
		}

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
	}
}

checkAllUsers();
