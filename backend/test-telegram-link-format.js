const axios = require('axios');

const BASE_URL = 'http://localhost:3066';

async function testTelegramLinkFormat() {
	console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Å—ã–ª–∫–∏ Telegram...\n');

	try {
		// –¢–µ—Å—Ç 1: –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç (—Ç–æ–ª—å–∫–æ deviceId)
		console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏...');
		const oldFormatResponse = await axios.post(`${BASE_URL}/api/telegram/test-link`, {
			startParam: 'ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765'
		});
		console.log('‚úÖ –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç:', oldFormatResponse.data);

		// –¢–µ—Å—Ç 2: –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç (appName:deviceId)
		console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏...');
		const newFormatResponse = await axios.post(`${BASE_URL}/api/telegram/test-link`, {
			startParam: 'etf.flow:ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765'
		});
		console.log('‚úÖ –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç:', newFormatResponse.data);

		// –¢–µ—Å—Ç 3: –î—Ä—É–≥–æ–π appName
		console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–æ–π appName...');
		const customAppResponse = await axios.post(`${BASE_URL}/api/telegram/test-link`, {
			startParam: 'crypto.tracker:ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765'
		});
		console.log('‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π appName:', customAppResponse.data);

		console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
		console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
		console.log('   ‚úÖ –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (fallback)');
		console.log('   ‚úÖ –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (appName:deviceId)');
		console.log('   ‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ appName –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è');

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
function simulateStartCommand(startParam) {
	let appName = 'etf.flow'; // Default app
	let deviceId = startParam;

	// Check if parameter contains app name (format: "appName:deviceId")
	if (startParam.includes(':')) {
		const parts = startParam.split(':');
		appName = parts[0];
		deviceId = parts[1];
	}

	return {
		appName,
		deviceId,
		originalParam: startParam
	};
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
console.log('üß™ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...\n');

const testCases = [
	'ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765',
	'etf.flow:ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765',
	'crypto.tracker:android_1234567890_abcdef',
	'portfolio.manager:web_device_xyz'
];

testCases.forEach((param, index) => {
	const result = simulateStartCommand(param);
	console.log(`${index + 1}Ô∏è‚É£ –ü–∞—Ä–∞–º–µ—Ç—Ä: "${param}"`);
	console.log(`   appName: "${result.appName}"`);
	console.log(`   deviceId: "${result.deviceId}"`);
	console.log('');
});

console.log('üì± –ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:');
console.log('–°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç: https://t.me/etf_flows_bot?start=ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765');
console.log('–ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç:  https://t.me/etf_flows_bot?start=etf.flow:ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_1757187698765');
