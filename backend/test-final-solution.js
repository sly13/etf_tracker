const axios = require('axios');

const BASE_URL = 'https://etf-flow.vadimsemenko.ru';

async function testFinalSolution() {
	console.log('üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è\n');

	const deviceId = `ios_B8CD09A5-8617-4F7E-BEAA-45DDA503DADD_${Date.now()}`;
	const appName = 'etf.flow';

	try {
		console.log('üì± –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:');
		console.log('   1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º deviceId:', deviceId);
		console.log('   2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
		console.log('   3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram');
		console.log('   4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ');
		console.log('   5. Telegram –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –∞–∫–∫–∞—É–Ω—Ç');
		console.log('');

		// 1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (–∫–∞–∫ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏)
		console.log('1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ...');
		const registerResponse = await axios.post(`${BASE_URL}/notifications/register-device`, {
			token: 'test_telegram_token', // –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
			appName: appName,
			deviceId: deviceId,
			deviceType: 'ios',
			appVersion: '1.0.0',
			firstName: '–¢–µ—Å—Ç',
			lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
			email: 'test@example.com',
		});

		console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', registerResponse.data);
		console.log('');

		// 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram (–∫–∞–∫ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏)
		console.log('2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram...');
		const telegramUrl = `https://t.me/etf_flows_bot?start=${appName}:${deviceId}`;
		console.log('üîó Telegram —Å—Å—ã–ª–∫–∞:', telegramUrl);
		console.log('');

		// 3. –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ
		console.log('3Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ...');
		const startParam = `${appName}:${deviceId}`;
		console.log('üì± –ü–∞—Ä–∞–º–µ—Ç—Ä start:', startParam);

		// –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä (–∫–∞–∫ –≤ –±–æ—Ç–µ)
		let parsedAppName = 'etf.flow'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
		let parsedDeviceId = '';

		if (startParam.includes(':')) {
			const parts = startParam.split(':');
			parsedAppName = parts[0];
			parsedDeviceId = parts[1];
		} else {
			parsedDeviceId = startParam;
		}

		console.log('üîç –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:');
		console.log('   App Name:', parsedAppName);
		console.log('   Device ID:', parsedDeviceId);
		console.log('');

		// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)
		console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram –±–æ—Ç–µ...');

		// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)
		const userByDeviceId = await findUserByDeviceId(parsedDeviceId, parsedAppName);

		if (userByDeviceId) {
			console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
			console.log('   ID:', userByDeviceId.id);
			console.log('   Device ID:', userByDeviceId.deviceId);
			console.log('   Application:', userByDeviceId.application.name);
			console.log('   Telegram Chat ID:', userByDeviceId.telegramChatId || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω');
			console.log('');

			// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–∏–≤—è–∑–∫—É Telegram Chat ID
			console.log('5Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–∏–≤—è–∑–∫—É Telegram Chat ID...');
			const telegramChatId = '123456789'; // –°–∏–º—É–ª–∏—Ä—É–µ–º Chat ID

			// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)
			const updatedSettings = {
				...userByDeviceId.settings,
				notifications: {
					...userByDeviceId.settings.notifications,
					enableTelegramNotifications: true,
				},
				telegram: {
					chatId: telegramChatId,
					linkedAt: new Date().toISOString(),
				},
			};

			console.log('‚úÖ Telegram Chat ID –ø—Ä–∏–≤—è–∑–∞–Ω:', telegramChatId);
			console.log('‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã');
			console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', JSON.stringify(updatedSettings, null, 2));
		} else {
			console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
			console.log('   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ');
		}

		console.log('\nüéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
		console.log('   ‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –≤ –ë–î');
		console.log('   ‚úÖ –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
		console.log('   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–∞—Ä—Å–∏—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
		console.log('   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
		console.log('   ‚úÖ Telegram Chat ID –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω');
		console.log('');
		console.log('üì± –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram!');
		console.log('üîó –°—Å—ã–ª–∫–∞:', telegramUrl);

	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)
async function findUserByDeviceId(deviceId, appName) {
	try {
		// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
		// –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ —ç—Ç–æ –±—É–¥–µ—Ç Prisma –∑–∞–ø—Ä–æ—Å
		console.log(`üîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: deviceId=${deviceId}, appName=${appName}`);

		// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mock –¥–∞–Ω–Ω—ã–µ
		return {
			id: 'user_123',
			deviceId: deviceId,
			application: {
				name: appName,
				displayName: 'ETF Flow Tracker',
			},
			telegramChatId: null,
			settings: {
				notifications: {
					enableETFUpdates: true,
					enableSignificantFlow: true,
					enableTestNotifications: false,
					enableTelegramNotifications: false,
					minFlowThreshold: 0.1,
					significantChangePercent: 20.0,
				},
				preferences: {
					language: 'en',
					timezone: 'UTC',
					deviceType: 'ios',
					appVersion: '1.0.0',
				},
				profile: {
					firstName: '–¢–µ—Å—Ç',
					lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
					email: 'test@example.com',
				},
			},
		};
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
		return null;
	}
}

testFinalSolution();
