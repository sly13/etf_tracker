import 'package:flutter/foundation.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'dart:convert';
import '../services/subscription_status_service.dart';

class SubscriptionProvider extends ChangeNotifier {
  bool _isPremium = false;
  bool _isLoading = false;
  bool _isInitialized = false;
  String? _error;
  static const String _premiumStatusKey = 'premium_status';
  static const String _lastCheckKey = 'last_status_check';

  // Getters
  bool get isPremium => _isPremium;
  bool get isLoading => _isLoading;
  bool get isInitialized => _isInitialized;
  String? get error => _error;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  Future<void> initialize() async {
    if (_isInitialized) return;

    _isLoading = true;
    _error = null;

    try {
      // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
      await _loadCachedStatus();

      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–µ–π –æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      notifyListeners();

      // –ó–∞—Ç–µ–º –≤ —Ñ–æ–Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ RevenueCat –∏ –±—ç–∫–µ–Ω–¥–∞
      _updateSubscriptionStatusInBackground();

      _isInitialized = true;

      if (kDebugMode) {
        print(
          'üîß SubscriptionProvider: –ë—ã—Å—Ç—Ä–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º: $_isPremium',
        );
      }
    } catch (e) {
      _error = '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: $e';
      if (kDebugMode) {
        print('‚ùå SubscriptionProvider: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: $e');
      }
    } finally {
      _isLoading = false;
    }
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  Future<void> _loadCachedStatus() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final cachedStatus = prefs.getBool(_premiumStatusKey);
      final lastCheck = prefs.getString(_lastCheckKey);

      if (cachedStatus != null) {
        _isPremium = cachedStatus;

        if (kDebugMode) {
          print(
            'üîß SubscriptionProvider: –ó–∞–≥—Ä—É–∂–µ–Ω –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $_isPremium',
          );
          if (lastCheck != null) {
            print('üîß –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: $lastCheck');
          }
        }
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∫—ç—à–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        _isPremium = false;
        if (kDebugMode) {
          print(
            'üîß SubscriptionProvider: –ù–µ—Ç –∫—ç—à–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $_isPremium',
          );
        }
      }
    } catch (e) {
      if (kDebugMode) {
        print('‚ö†Ô∏è SubscriptionProvider: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞: $e');
      }
      _isPremium = false;
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Ñ–æ–Ω–µ
  Future<void> _updateSubscriptionStatusInBackground() async {
    try {
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±—ç–∫–µ–Ω–¥–æ–º –∏ –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
      final syncedStatus =
          await SubscriptionStatusService.syncSubscriptionStatus();

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
      if (syncedStatus != _isPremium) {
        _isPremium = syncedStatus;
        await _saveCachedStatus();

        if (kDebugMode) {
          print('üîß SubscriptionProvider: –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ —Ñ–æ–Ω–µ: $_isPremium');
        }

        // –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–µ–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        notifyListeners();
      }
    } catch (e) {
      if (kDebugMode) {
        print('‚ö†Ô∏è SubscriptionProvider: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ñ–æ–Ω–µ: $e');
      }
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –∫—ç—à
  Future<void> _saveCachedStatus() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setBool(_premiumStatusKey, _isPremium);
      await prefs.setString(_lastCheckKey, DateTime.now().toIso8601String());
    } catch (e) {
      if (kDebugMode) {
        print('‚ö†Ô∏è SubscriptionProvider: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞: $e');
      }
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<void> _refreshSubscriptionStatus() async {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º SubscriptionStatusService –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
      // –û–Ω —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±—ç–∫–µ–Ω–¥, –ø–æ—Ç–æ–º RevenueCat –∫–∞–∫ fallback
      final isPremium =
          await SubscriptionStatusService.getCurrentSubscriptionStatus();
      _isPremium = isPremium;

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      await _saveCachedStatus();

      if (kDebugMode) {
        print('üîß SubscriptionProvider: –°—Ç–∞—Ç—É—Å –ø—Ä–µ–º–∏—É–º –æ–±–Ω–æ–≤–ª–µ–Ω: $isPremium');
      }
    } catch (e) {
      _setError('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏: $e');
      if (kDebugMode) {
        print('‚ùå SubscriptionProvider: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: $e');
      }
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ (–ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥)
  Future<void> refreshSubscriptionStatus() async {
    _setLoading(true);
    await _refreshSubscriptionStatus();
    _setLoading(false);
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞ (–ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏)
  void setPremiumStatus(bool isPremium) {
    print('üîß SubscriptionProvider.setPremiumStatus() –≤—ã–∑–≤–∞–Ω');
    print('üîß –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: $_isPremium');
    print('üîß –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: $isPremium');

    _isPremium = isPremium;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
    _saveCachedStatus();

    if (kDebugMode) {
      print('üîß SubscriptionProvider: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å: $isPremium');
    }

    print('üîß –í—ã–∑—ã–≤–∞–µ–º notifyListeners()');
    notifyListeners();
    print('üîß notifyListeners() –∑–∞–≤–µ—Ä—à–µ–Ω');
  }

  // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏)
  bool get isPremiumFast => _isPremium;

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  void _setLoading(bool loading) {
    _isLoading = loading;
    notifyListeners();
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—à–∏–±–∫–∏
  void _setError(String error) {
    _error = error;
    notifyListeners();
  }

  // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏
  void _clearError() {
    _error = null;
    notifyListeners();
  }

  // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏ (–ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥)
  void clearError() {
    _clearError();
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ
  Future<Map<String, dynamic>?> getSavedCustomerInfo() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final customerInfoString = prefs.getString('customer_info');

      if (customerInfoString != null) {
        // –ü–∞—Ä—Å–∏–º JSON —Å—Ç—Ä–æ–∫—É
        final customerInfo =
            json.decode(customerInfoString) as Map<String, dynamic>;

        if (kDebugMode) {
          print(
            'üîß SubscriptionProvider: –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ',
          );
        }

        return customerInfo;
      }

      return null;
    } catch (e) {
      if (kDebugMode) {
        print(
          '‚ö†Ô∏è SubscriptionProvider: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ: $e',
        );
      }
      return null;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö entitlements
  Future<List<String>> getActiveEntitlements() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final entitlements = prefs.getStringList('active_entitlements') ?? [];

      if (kDebugMode) {
        print('üîß SubscriptionProvider: –ê–∫—Ç–∏–≤–Ω—ã–µ entitlements: $entitlements');
      }

      return entitlements;
    } catch (e) {
      if (kDebugMode) {
        print('‚ö†Ô∏è SubscriptionProvider: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ entitlements: $e');
      }
      return [];
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<bool> hasActiveSubscriptions() async {
    try {
      final entitlements = await getActiveEntitlements();
      return entitlements.isNotEmpty;
    } catch (e) {
      if (kDebugMode) {
        print('‚ö†Ô∏è SubscriptionProvider: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: $e');
      }
      return false;
    }
  }
}
