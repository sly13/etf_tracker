services:
  # PostgreSQL база данных
  postgres:
    image: postgres:17-alpine
    container_name: etf_postgres_dev
    environment:
      POSTGRES_DB: etf_tracker
      POSTGRES_USER: etf_user
      POSTGRES_PASSWORD: etf_password
    ports:
      - "3080:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - etf_network_dev
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: etf_backend_dev
    ports:
      - "3066:3000"
    depends_on:
      - postgres
    networks:
      - etf_network_dev
    restart: unless-stopped
    volumes:
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://etf_user:etf_password@postgres:5432/etf_tracker?schema=public
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - JWT_EXPIRES_IN=24h

  # Admin панель
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:3066/api
        - NODE_ENV=development
    container_name: etf_admin_dev
    ports:
      - "3065:3065"
    depends_on:
      - backend
    networks:
      - etf_network_dev
    restart: unless-stopped

  # Trade Bot (NestJS)
  trade_bot:
    build:
      context: ./trade_bot
      dockerfile: Dockerfile
    container_name: etf_trade_bot_dev
    environment:
      - NODE_ENV=development
      - PORT=3088
      - DATABASE_URL=postgresql://etf_user:etf_password@postgres:5432/etf_tracker?schema=public
      - CORS_ORIGIN=http://localhost:3089,http://localhost:3000
      - MIN_FLOW_THRESHOLD=1000000
      - MAX_POSITION_SIZE=1000
      - CHECK_INTERVAL=60000
      - TZ=Europe/Moscow
      - OKX_API_KEY=cb165bc6-269c-4d73-b4ac-43860091cae0
      - OKX_SECRET_KEY=16AFF118061CAD204958F40B0E7D87E8
      - OKX_PASSPHRASE=ETFbot1m!
      - OKX_SANDBOX=false
    ports:
      - "3088:3088"
    depends_on:
      - postgres
    networks:
      - etf_network_dev
    restart: unless-stopped
    volumes:
      - ./trade_bot/src:/app/src
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  # Trade Monitoring (React App)
  trade_monitoring:
    build:
      context: ./trade_bot_monitoring
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:3088
        - REACT_APP_ENVIRONMENT=development
    container_name: etf_trade_monitoring_dev
    ports:
      - "3089:80"
    depends_on:
      - trade_bot
    networks:
      - etf_network_dev
    restart: unless-stopped

  # Website (Next.js App)
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    container_name: etf_website_dev
    ports:
      - "3070:3000"
    networks:
      - etf_network_dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000

volumes:
  postgres_data_dev:

networks:
  etf_network_dev:
    driver: bridge
